{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","console","log","go","this","LoginController","login","credentials","authenticate","provider","res","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","User","$resource","id","update","method","angular","module","config","$inject","factory"],"mappings":"YAOA,SAASA,QAAOC,EAAgBC,GAC9BD,EACCE,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,cACLC,IAAK,IACLC,YAAa,wBACbC,WAAY,6BAGdJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GC3B9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACfC,KAAK,WACJC,QAAQC,IAAI,gCACZP,EAAOQ,GAAG,WARpB,GAAML,GAAWM,IAEjBN,GAASC,QAUTD,EAASF,OAASA,EAKpB,QAASS,iBAAgBX,EAAOC,GAK9B,QAASC,KACPF,EAAMY,MAAMA,EAAMC,aACfP,KAAK,WACJC,QAAQC,IAAI,gCACZP,EAAOQ,GAAG,gBAMhB,QAASK,GAAaC,GACpBf,EAAMc,aAAaC,GAChBT,KAAK,SAACU,GACLT,QAAQC,IAAIQ,KAjBlB,GAAMJ,GAAQF,IAEdE,GAAMC,eAUND,EAAMV,OAASA,EAQfU,EAAME,aAAeA,ECxCvB,QAASG,gBAAejB,EAAOC,EAAQiB,GAMrC,QAASC,KACPnB,EAAMmB,SACHb,KAAK,WACJC,QAAQC,IAAI,4BAMlB,QAASY,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,MACXxB,EAAMyB,iBAAmBC,EAAgBC,SAASL,EAAQM,QAC5DP,EAAEQ,iBAEF5B,EAAOQ,GAAG,SACVc,EAAKC,QAAU,sCApBnB,GAAMD,GAAOb,IAEba,GAAKO,WAAa9B,EAAMyB,gBACxBF,EAAKC,QAAU,IASf,IAAME,IAAmB,YAAa,WAYtCR,GAAWa,IAAI,oBAAqBX,GAEpCG,EAAKJ,OAASA,EC7BhB,QAASa,MAAKC,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCC,QAAUC,OAAQ,SHLtBC,QACCC,OAAO,kBAAmB,aAAc,YAAa,eACrDC,OAAOrD,QACPqD,OAAO7C,MAERR,OAAOsD,SAAW,iBAAkB,sBAuBpC9C,KAAK8C,SAAW,iBC5BhBH,QAAQC,OAAO,kBACV9C,WAAW,qBAAsBO,oBACjCP,WAAW,kBAAmBmB,iBAEnCZ,mBAAmByC,SAAW,QAAS,UAkBvC7B,gBAAgB6B,SAAW,QAAS,UCtBpCH,QAAQC,OAAO,kBACZ9C,WAAW,iBAAkByB,gBAEhCA,eAAeuB,SAAW,QAAS,SAAU,cCH7CH,QAAQC,OAAO,kBACZG,QAAQ,OAAQT","file":"app.js","sourcesContent":["angular\n.module('tindubertagram', ['ngResource', 'ui.router', 'satellizer'])\n.config(Router)\n.config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\n\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  })\n  .state('usersIndex', {\n    url: '/',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  // $authProvider.facebook({\n  //   clientId: '1854080408158696'\n  // });\n}\n","angular.module('tindubertagram')\n    .controller('RegisterController', RegisterController)\n    .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\n\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n          .then(() => {\n            console.log('We would go to the feed now!');\n            $state.go('login');\n          });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\n\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        console.log('We would go to the feed now!');\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n      .then((res) => {\n        console.log(res);\n      });\n  }\n  login.authenticate = authenticate;\n}\n","angular.module('tindubertagram')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\n\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        console.log('main controller logout');\n        // $state.go('usersIndex');\n      });\n  }\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      // console.log('state: ',$state);\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('tindubertagram')\n  .factory('User', User);\n\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n\n}\n"]}