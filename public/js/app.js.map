{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/feed.js","js/controllers/feed.js","js/models/feed.js","js/directives/googlemap.js","js/controllers/main.js","js/directives/toggle.js","js/models/user.js","js/controllers/users.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","controller","templateUrl","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","instagram","RegisterController","$auth","$state","$window","submit","signup","register","user","then","res","localStorage","setItem","data","token","go","this","LoginController","login","credentials","authenticate","service","isActive","card","restrict","replace","MainFeedController","MainFeed","mainFeed","all","query","ProfileFeedController","ProfileFeed","profileFeed","params","$resource","id","googleMap","template","link","$scope","element","google","maps","Map","center","lat","lng","zoom","styles","featureType","elementType","stylers","gamma","hue","visibility","weight","color","lightness","saturation","MainController","$rootScope","User","UserSearch","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","search","searchTerm","length","allUsers","searchBoxOpen","getPayload","userId","_id","currentUser","get","isLoggedIn","$on","toggle","scope","firstValue","secondValue","on","$apply","update","method","UserShowController","deleteUser","userShow","$remove","delete","UserEditController","userEdit","$update","angular","module","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n.module('travelApp', ['ngResource', 'ui.router', 'satellizer'])\n.config(Router)\n.config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\n\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('register', {\n    url: '/register',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  })\n  .state('feed', {\n    url: '/feed',\n    templateUrl: '/templates/feed.html',\n    controller: 'MainFeedController as mainFeed'\n  })\n  .state('profile', {\n    url: '/user/:id',\n    templateUrl: '/templates/profile.html',\n    controller: 'UserShowController as userShow'\n  })\n  .state('map', {\n    url: '/map',\n    templateUrl: '/templates/map.html'\n  })\n  .state('home', {\n    url: '/',\n    templateUrl: '/templates/home.html'\n  });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '332198860490764'\n  });\n\n  $authProvider.instagram({\n    clientId: '92e67d01aacb443fa782c92500650463'\n  });\n}\n","angular.module('travelApp')\n    .controller('RegisterController', RegisterController)\n    .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window'];\nfunction RegisterController($auth, $state, $window) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then((res) => {\n        $window.localStorage.setItem('token', res.data.token);\n        $state.go('feed');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n  login.isActive = false;\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('feed');\n      });\n  }\n\n  login.submit = submit;\n\n  function authenticate(service) {\n    $auth.authenticate(service, () => {\n      $state.go('feed');\n    });\n  }\n\n  login.authenticate = authenticate;\n}\n","angular\n  .module('travelApp')\n  .directive('card', card);\n\nfunction card() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/card.html'\n  };\n}\n","angular.module('travelApp')\n  .controller('MainFeedController', MainFeedController)\n  .controller('ProfileFeedController', ProfileFeedController);\n\nMainFeedController.$inject = [ '$state' , 'MainFeed' ];\n\nfunction MainFeedController($state, MainFeed) {\n  const mainFeed = this;\n\n  mainFeed.all = MainFeed.query();\n}\n\n\nProfileFeedController.$inject = [ '$state', 'ProfileFeed' ];\n\nfunction ProfileFeedController($state, ProfileFeed) {\n  const profileFeed = this;\n\n  profileFeed.all = ProfileFeed.query($state.params);\n}\n","angular.module('travelApp')\n  .factory('MainFeed', MainFeed)\n  .factory('ProfileFeed', ProfileFeed);\n\nMainFeed.$inject = ['$resource'];\nfunction MainFeed($resource) {\n  return new $resource( '/user/feed' );\n}\n\nProfileFeed.$inject = ['$resource'];\nfunction ProfileFeed($resource) {\n  return new $resource( '/user/:id/posts', { id: '@_id' } );\n}\n","angular.module('travelApp')\n.directive('googleMap', googleMap);\n\n//\n// angular.module('ngMap').controller('MyCtrl', function() {\n//   this.address = \"Toronto Canada\";\n// });\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\">Google map here!</div>',\n    link: function($scope, element) {\n      new $window.google.maps.Map(element[0], {\n        center: { lat: 22.212328, lng: -2.191592 },\n        zoom: 1,\n        styles: [{'featureType':'all','elementType':'all','stylers':[{'gamma':'2.71'},{'hue':'#ff0000'},{'visibility':'off'}]},{'featureType':'administrative','elementType':'all','stylers':[{'visibility':'on'}]},{'featureType':'administrative','elementType':'geometry','stylers':[{'weight':'0'},{'gamma':'2'},{'visibility':'off'}]},{'featureType':'administrative','elementType':'geometry.fill','stylers':[{'visibility':'off'}]},{'featureType':'administrative','elementType':'geometry.stroke','stylers':[{'visibility':'on'}]},{'featureType':'administrative','elementType':'labels','stylers':[{'visibility':'off'}]},{'featureType':'administrative','elementType':'labels.text','stylers':[{'color':'#ffffff'},{'visibility':'off'}]},{'featureType':'administrative','elementType':'labels.text.fill','stylers':[{'color':'#6b6972'}]},{'featureType':'administrative.country','elementType':'geometry','stylers':[{'visibility':'on'}]},{'featureType':'administrative.country','elementType':'geometry.fill','stylers':[{'gamma':'1.00'}]},{'featureType':'administrative.country','elementType':'geometry.stroke','stylers':[{'visibility':'on'}]},{'featureType':'administrative.country','elementType':'labels','stylers':[{'visibility':'on'}]},{'featureType':'administrative.country','elementType':'labels.text','stylers':[{'visibility':'off'},{'lightness':'69'},{'saturation':'-4'}]},{'featureType':'administrative.country','elementType':'labels.icon','stylers':[{'visibility':'off'}]},{'featureType':'administrative.province','elementType':'labels.text','stylers':[{'visibility':'off'}]},{'featureType':'administrative.locality','elementType':'labels.text','stylers':[{'visibility':'on'}]},{'featureType':'administrative.neighborhood','elementType':'labels.text','stylers':[{'visibility':'on'}]},{'featureType':'administrative.land_parcel','elementType':'geometry.fill','stylers':[{'visibility':'off'}]},{'featureType':'administrative.land_parcel','elementType':'geometry.stroke','stylers':[{'visibility':'off'}]},{'featureType':'landscape','elementType':'all','stylers':[{'color':'#ffffff'}]},{'featureType':'landscape','elementType':'geometry','stylers':[{'visibility':'on'}]},{'featureType':'landscape.man_made','elementType':'geometry','stylers':[{'visibility':'on'}]},{'featureType':'landscape.man_made','elementType':'geometry.stroke','stylers':[{'visibility':'off'}]},{'featureType':'landscape.natural.landcover','elementType':'geometry.stroke','stylers':[{'visibility':'off'}]},{'featureType':'landscape.natural.terrain','elementType':'geometry','stylers':[{'visibility':'on'}]},{'featureType':'landscape.natural.terrain','elementType':'geometry.fill','stylers':[{'gamma':'1.00'}]},{'featureType':'landscape.natural.terrain','elementType':'geometry.stroke','stylers':[{'visibility':'off'}]},{'featureType':'poi','elementType':'all','stylers':[{'visibility':'off'}]},{'featureType':'road','elementType':'all','stylers':[{'saturation':-100},{'lightness':45}]},{'featureType':'road.highway','elementType':'all','stylers':[{'visibility':'off'}]},{'featureType':'road.arterial','elementType':'labels.icon','stylers':[{'visibility':'off'}]},{'featureType':'transit','elementType':'all','stylers':[{'visibility':'off'}]},{'featureType':'transit.line','elementType':'geometry','stylers':[{'visibility':'on'}]},{'featureType':'water','elementType':'all','stylers':[{'color':'#e8f0f1'},{'visibility':'on'}]},{'featureType':'water','elementType':'geometry.stroke','stylers':[{'visibility':'off'},{'color':'#ffffff'}]}]\n      });\n\n    }\n  };\n}\n","angular.module('travelApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope' , 'User', 'UserSearch'];\n\nfunction MainController($auth, $state, $rootScope, User, UserSearch) {\n  const main = this;\n  main.searchBoxOpen = false;\n\n  if ($auth.getPayload()) {\n    const userId = { id: $auth.getPayload()._id };\n    this.currentUser = User.get(userId);\n  }\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('home');\n      });\n  }\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  function search() {\n    if (main.searchTerm.length !== 0){\n      main.allUsers = UserSearch.query({search: main.searchTerm });\n    } else {\n      main.allUsers = 0;\n    }\n  }\n  main.search = search;\n}\n","angular\n  .module('travelApp')\n  .directive('toggle', toggle);\n\nfunction toggle() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/toggle.html' ,\n    scope: {\n      isActive: '=',\n      firstValue: '@',\n      secondValue: '@'\n    },\n    link: function(scope, element) {\n      element.on('click', () => {\n        scope.isActive = !scope.isActive;\n        scope.$apply();\n      });\n    }\n  };\n}\n","angular.module('travelApp')\n  .factory('User', User)\n  .factory('UserSearch', UserSearch);\n\nUserSearch.$inject = ['$resource'];\nfunction UserSearch($resource) {\n  return new $resource('/users');\n}\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('travelApp')\n  .controller('UserShowController', UserShowController)\n  .controller('UserEditController', UserEditController);\n\nUserShowController.$inject = ['$state', '$auth', 'User'];\nfunction UserShowController($state, $auth, User) {\n  const userShow = this;\n\n  userShow.isLoggedIn = $auth.isAuthenticated;\n  userShow.user = User.get($state.params);\n\n  function deleteUser() {\n    userShow.user.$remove(() => {\n      $state.go('home');\n    });\n  }\n\n  userShow.delete = deleteUser;\n}\n\nUserEditController.$inject = ['User', '$state'];\nfunction UserEditController(User, $state) {\n  const userEdit = this;\n\n  userEdit.user = User.get($state.params);\n\n  function update() {\n    userEdit.user.$update(() => {\n      $state.go('profile', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}